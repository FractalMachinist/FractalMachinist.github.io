* {
    box-sizing: border-box;
    font-family: Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial
}

body {
    margin: 0;
    background: #f6f7fb;
    color: #121212
}

header {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping */
    justify-content: space-between;
    align-items: center;
    padding: 12px 12px;
    background: #2b3850;
    color: #fff;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 40;
}

header h1 {
    margin: 0;
    font-size: 18px
}

.header-actions {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping of buttons */
    gap: 8px; /* Add spacing between buttons */
    justify-content: flex-start; /* Keep buttons left-aligned */
    margin-top: 8px; /* Add spacing when wrapped */
}

.header-actions button,
.file-label {
    margin-left: 8px
}

/* Make the navbar toggle buttons readable on the dark header */
.header-actions .icon-btn {
    background: rgba(255,255,255,0.08);
    color: #fff;
    border: 1px solid rgba(255,255,255,0.06);
    padding: 6px 10px;
    border-radius: 8px;
}
.header-actions .icon-btn:hover { background: rgba(255,255,255,0.12) }

.file-label input {
    display: none
}

main {
    display: grid;
    grid-template-columns: 300px 1fr 240px;
    gap: 12px;
    padding: 72px 12px 12px 12px; /* account for fixed header */
}

/* full-height layout so sections can stretch vertically */
html,
body {
    height: 100%
}

main {
    height: calc(100vh - 64px)
}

aside#library,
aside#cast {
    background: #fff;
    border-radius: 8px;
    padding: 12px;
    min-height: 300px;
    overflow: auto
}

/* Mobile: popover panels */
@media screen and (max-width: 900px) {
    main {
        grid-template-columns: 1fr !important;
        grid-template-areas: "active" !important;
        padding: 84px 8px 12px 8px;
    }
    
    section#active {
        grid-area: active;
    }
    
    aside#library,
    aside#cast {
        position: fixed !important;
        top: 64px !important;
        bottom: 0 !important;
        left: 0 !important;
        width: 92% !important;
        max-width: 420px !important;
        box-shadow: 0 10px 30px rgba(0,0,0,0.2) !important;
        transform: translateX(-110%) !important;
        transition: transform 220ms ease !important;
        z-index: 50 !important;
        border-radius: 0 12px 12px 0 !important;
        margin: 0 !important;
        padding: 12px !important;
        background: #fff !important;
        overflow: auto !important;
        min-height: auto !important;
    }
    aside#cast {
        right: 0 !important;
        left: auto !important;
        transform: translateX(110%) !important;
        border-radius: 12px 0 0 12px !important;
    }
    aside#library.open { 
        transform: translateX(0) !important; 
    }
    aside#cast.open { 
        transform: translateX(0) !important; 
    }
    header .header-actions button.icon-btn { 
        display: inline-block !important;
    }
    aside .sidebar-close {
        position: absolute !important;
        top: 8px !important;
        right: 8px !important;
        background: rgba(0,0,0,0.06) !important;
        color: #222 !important;
        border: none !important;
        padding: 6px 8px !important;
        border-radius: 6px !important;
        z-index: 60 !important;
        cursor: pointer !important;
        display: block !important;
    }
}

/* Larger screens: hide toggle buttons and ensure sidebars are in grid */
@media screen and (min-width: 901px) {
    header .header-actions button.icon-btn { display: none !important; }
    
    aside#library,
    aside#cast {
        position: static !important;
        transform: none !important;
        width: auto !important;
        height: auto !important;
        top: auto !important;
        bottom: auto !important;
        left: auto !important;
        right: auto !important;
        box-shadow: none !important;
        z-index: auto !important;
    }
    
    aside .sidebar-close {
        display: none !important;
    }
}

/* Additional iOS Safari specific fixes */
@media screen and (max-device-width: 900px) {
    aside#library,
    aside#cast {
        -webkit-transform: translateX(-110%) !important;
        -moz-transform: translateX(-110%) !important;
        -ms-transform: translateX(-110%) !important;
        -o-transform: translateX(-110%) !important;
        transform: translateX(-110%) !important;
    }
    
    aside#cast {
        -webkit-transform: translateX(110%) !important;
        -moz-transform: translateX(110%) !important;
        -ms-transform: translateX(110%) !important;
        -o-transform: translateX(110%) !important;
        transform: translateX(110%) !important;
    }
    
    aside#library.open {
        -webkit-transform: translateX(0) !important;
        -moz-transform: translateX(0) !important;
        -ms-transform: translateX(0) !important;
        -o-transform: translateX(0) !important;
        transform: translateX(0) !important;
    }
    
    aside#cast.open {
        -webkit-transform: translateX(0) !important;
        -moz-transform: translateX(0) !important;
        -ms-transform: translateX(0) !important;
        -o-transform: translateX(0) !important;
        transform: translateX(0) !important;
    }
}

section#active {
    background: #fff;
    border-radius: 8px;
    padding: 12px;
    min-height: 300px;
    display: flex;
    flex-direction: column;
    min-height: 0
}

.group {
    border: 1px solid #e6e9ef;
    border-radius: 6px;
    padding: 8px;
    margin-bottom: 8px;
    background: #fbfdff
}

.group-head {
    display: flex;
    align-items: center;
    gap: 8px
}

.collapse-btn {
    background: transparent;
    border: none;
    padding: 4px 6px;
    font-size: 12px;
    cursor: pointer
}

.group.collapsed .aspect-list {
    display: none
}

.group.collapsed .collapse-btn {
    transform: rotate(-90deg)
}

.group.collapsed .add-row {
    display: none
}

.group-name {
    flex: 1;
    border: none;
    background: transparent;
    font-weight: 600
}

.required-label {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    white-space: nowrap;
    position: relative
}

/* visually hide the actual checkbox but keep it keyboard-focusable and in the DOM for JS */
.required-label input {
    position: absolute;
    left: -9999px;
    width: 1px;
    height: 1px;
    overflow: hidden;
    border: 0;
    padding: 0;
    margin: 0
}

.required-label .req-icon {
    font-size: 14px;
    color: #cbd5e1;
    line-height: 1;
    cursor: pointer;
    display: inline-block;
    padding: 2px
}

/* checked state reflected on the star */
.required-label input:checked+.req-icon {
    color: #92400e
}

.aspect-list {
    list-style: none;
    padding: 6px;
    margin: 8px 0;
    border-radius: 6px
}

.aspect-list.drag-over {
    outline: 3px dashed #5b86ff;
    outline-offset: 4px
}

.aspect {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 6px 8px;
    border-radius: 4px;
    background: linear-gradient(#fff, #f3f6fb);
    margin-bottom: 6px;
    border: 1px solid #e6e9ef
}

.aspect .add-aspect-to-character {
    margin-right: 8px;
    background: #1f6feb;
    color: white;
    border: none;
    padding: 6px 8px;
    border-radius: 6px;
    font-weight: 600;
}
.aspect .add-aspect-to-character:hover { filter: brightness(1.05) }
.aspect .edit-aspect, .aspect .delete-aspect { margin-left: 6px }

.add-row {
    display: flex;
    gap: 8px;
    margin-top: 8px
}

.add-row input {
    flex: 1;
    padding: 6px
}

.add-row button {
    padding: 6px 8px
}

.aspect .aspect-text {
    flex: 1;
    margin-right: 8px
}

.cast ul {
    list-style: none;
    padding: 0;
    margin: 0
}

#cast-list {
    padding: 0;
}

#cast-list li {
    padding: 8px;
    border-radius: 6px;
    margin-bottom: 6px;
    display: flex;
    align-items: center;
    justify-content: space-between
}

/* Use a CSS variable --character-color (set from JS) and derive
   border/background/text using color-mix so the border is a
   darkened (mixed with black) version of the color. Provide
   graceful fallbacks for browsers without color-mix(). */
#cast-list li {
    /* default variable to a light gray */
    --character-color: #eeeeee;
    /* background: a very pale version of the character color */
    background: linear-gradient(var(--character-color), var(--character-color));
    /* border: mix with black for a darker outline; fallback to rgba(0,0,0,0.08) */
    border: 1px solid rgba(0,0,0,0.06);
}

@supports (color: color-mix(in srgb, black 20%, var(--character-color))) {
    #cast-list li {
        background: color-mix(in srgb, white 88%, var(--character-color));
        border: 1px solid color-mix(in srgb, black 18%, var(--character-color));
        color: color-mix(in srgb, black 64%, var(--character-color));
    }
}

.active-header {
    display: flex;
    gap: 8px;
    margin-bottom: 8px
}

.active-tabs { display: flex; gap: 8px; margin-bottom: 8px }
.tab-btn { padding: 6px 10px; border-radius: 6px; border: 1px solid transparent; background: #f3f4f6 }
.tab-btn.active { background: white; border-color: #e6e9ef; font-weight: 700 }
.tab-content.hidden { display: none }

#character-name {
    flex: 1;
    padding: 6px
}

#character-desc {
    width: 100%;
    padding: 8px
}

.aspects-area {
    margin-top: 8px;
    display: flex;
    flex-direction: column;
    flex: 1;
    min-height: 0
}

#active-aspects {
    flex: 1;
    min-height: 0;
    overflow: auto;
    padding: 8px
}

button {
    cursor: pointer
}

[draggable="true"] {
    touch-action: none
}

.aspect.dragging {
    opacity: 0.5
}

/* cast controls compact menu */
.cast-controls {
    display: flex;
    align-items: center;
    gap: 8px
}

.icon-btn {
    background: transparent;
    border: 1px solid rgba(0, 0, 0, 0.06);
    padding: 6px 8px;
    border-radius: 6px
}

.cast-menu {
    position: absolute;
    background: #fff;
    border: 1px solid #e6e9ef;
    padding: 6px;
    border-radius: 6px;
    box-shadow: 0 6px 18px rgba(16, 24, 40, 0.08)
}

.cast-menu.hidden {
    display: none
}

.cast-actions {
    position: relative
}

.cast-menu .menu-item {
    display: block;
    padding: 6px 12px;
    background: transparent;
    border: none;
    text-align: left;
    width: 100%
}

.cast-menu .menu-item:hover {
    background: #f3f6ff
}

/* icon sizing for inline SVGs */
.icon-btn svg {
    vertical-align: middle;
    fill: currentColor
}

.header-actions button {
    font-size: 13px;
    padding: 6px 8px
}

.inline-controls .icon-btn {
    padding: 4px 6px
}

.menu-item[title] {
    position: relative
}

/* inline header controls */
.inline-controls {
    margin-left: 8px
}

.inline-controls .cast-menu {
    top: 28px;
    left: 0
}

.cast-actions .cast-menu {
    top: 36px;
    left: 8px
}
/* Adjust styles to hide button text and only show icons on narrow screens. */
@media screen and (max-width: 600px) {

  .header-actions {
    gap: 0px;
  }

  .header-actions button {
    margin: 0px;
  }

  .header-actions button {
    border-radius: 0;
  }

  .header-actions button:first-child {
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px;
  }

  .header-actions button:last-child {
    border-top-right-radius: 8px;
    border-bottom-right-radius: 8px;
  }

  .header-actions button span {
    font-size: 0;
    /* Hide text */
  }
}